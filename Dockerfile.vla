FROM nvidia/cuda:12.2.0-devel-ubuntu22.04

ENV DEBIAN_FRONTEND=noninteractive

# System packages
RUN apt-get update && apt-get install -y \
    git \
    wget \
    curl \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    build-essential \
    ninja-build \
    && rm -rf /var/lib/apt/lists/*

# Install Miniconda
ENV CONDA_DIR=/opt/conda
ENV PATH=$CONDA_DIR/bin:$PATH
RUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh && \
    bash ~/miniconda.sh -b -p $CONDA_DIR && \
    rm ~/miniconda.sh && \
    conda clean -ya

# Accept Terms & install mamba
RUN conda init bash && \
    conda config --set always_yes yes && \
    conda config --add channels defaults && \
    conda config --add channels conda-forge && \
    conda config --set channel_priority strict && \
    conda tos accept --override-channels --channel https://repo.anaconda.com/pkgs/main && \
    conda tos accept --override-channels --channel https://repo.anaconda.com/pkgs/r && \
    conda tos accept --override-channels --channel https://conda.anaconda.org/conda-forge && \
    conda install -n base -c conda-forge mamba


# Create conda environment with Python 3.10
RUN mamba create -n openvla python=3.10 -y

# Activate the environment
SHELL ["conda", "run", "-n", "openvla", "/bin/bash", "-c"]

# Install PyTorch 2.2.0 + dependencies
RUN pip install torch==2.2.0 torchvision==0.17.0 torchaudio==2.2.0 --index-url https://download.pytorch.org/whl/cu121

# Install the rest
RUN pip install \
    transformers==4.40.1 \
    tokenizers==0.19.1 \
    timm==0.9.10 \
    flash-attn==2.5.5 --no-build-isolation

# Optional (if needed by OpenVLA)
RUN pip install packaging ninja accelerate matplotlib json-numpy jsonlines huggingface_hub einops sentencepiece==0.1.99

WORKDIR /workspace

CMD ["conda", "run", "--no-capture-output", "-n", "openvla", "bash"]
